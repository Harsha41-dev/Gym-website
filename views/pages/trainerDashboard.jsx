const React = require("react");
const ejs = require("ejs");
const MainLayout = require("../layouts/MainLayout");
const fallbackData = require("../utils/fallbackData");

const template = "<main>\n  <div class=\"container my-5\">\n    <div class=\"dashboard-welcome\">\n      <h2 class=\"mb-4\">\n        <i class=\"fas fa-chart-line me-2\"></i>Hello, <%= locals.userName %>!\n      </h2>\n      <p class=\"lead mb-4 text-white\">Welcome to your trainer dashboard. Manage your clients and schedule from here.</p>\n    </div>\n    \n    <div class=\"row g-4\">\n      <!-- Sessions Stats Card -->\n      <div class=\"col-lg-4\">\n        <div class=\"dashboard-panel\">\n          <h4 class=\"text-danger mb-4\"><i class=\"fas fa-chart-pie me-2\"></i>Sessions Overview</h4>\n          <div class=\"d-flex justify-content-between align-items-center mb-3\">\n            <span class=\"text-light\">Today's Sessions:</span>\n            <span class=\"dashboard-stat\" id=\"todaySessions\" data-target=\"<%= stats.todayBookings || 0 %>\"><%= stats.todayBookings || 0 %></span>\n          </div>\n          <div class=\"d-flex justify-content-between align-items-center mb-3\">\n            <span class=\"text-light\">Total Sessions:</span>\n            <span class=\"dashboard-stat\" id=\"totalSessions\" data-target=\"<%= stats.totalBookings || 0 %>\"><%= stats.totalBookings || 0 %></span>\n          </div>\n          <div class=\"d-flex justify-content-between align-items-center mb-3\">\n            <span class=\"text-light\">Total Clients:</span>\n            <span class=\"dashboard-stat\" id=\"totalClients\" data-target=\"<%= stats.clientCount || 0 %>\"><%= stats.clientCount || 0 %></span>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Today's Schedule -->\n      <div class=\"col-lg-8\">\n        <div class=\"dashboard-section mb-4\">\n          <div class=\"section-header mb-3\">\n            <h3><i class=\"fas fa-calendar-day me-2\"></i>Today's Schedule</h3>\n          </div>\n          \n          <div class=\"schedule-container\">\n            <div class=\"table-responsive\" id=\"todayScheduleTable\">\n              <table class=\"table table-dark table-hover\">\n                <thead>\n                  <tr>\n                    <th>Time</th>\n                    <th>Course</th>\n                  </tr>\n                </thead>\n                <tbody id=\"todayScheduleBody\">\n                  <% \n                  // Get today's day of the week\n                  const daysOfWeek = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n                  const today = daysOfWeek[new Date().getDay()];\n                  \n                  let todayClasses = [];\n                  \n                  // If server-provided today schedule exists, use it\n                  if (locals.todaySchedule && locals.todaySchedule.length > 0) { \n                    todayClasses = locals.todaySchedule.map(session => ({\n                      time: session.time,\n                      program: session.program\n                    }));\n                  } \n                  // Otherwise, filter from weekly schedule if available\n                  else if (locals.weeklySchedule && locals.weeklySchedule.length > 0) {\n                    todayClasses = locals.weeklySchedule\n                      .filter(session => session.day.toLowerCase() === today)\n                      .map(session => ({\n                        time: session.time,\n                        program: session.course.charAt(0).toUpperCase() + session.course.slice(1)\n                      }));\n                  }\n                  \n                  // Sort by time\n                  todayClasses.sort((a, b) => {\n                    const timeA = a.time.split(' - ')[0];\n                    const timeB = b.time.split(' - ')[0];\n                    return timeA.localeCompare(timeB);\n                  });\n                  \n                  if (todayClasses.length > 0) {\n                    todayClasses.forEach(session => { %>\n                      <tr>\n                        <td><strong><%= session.time %></strong></td>\n                        <td><%= session.program %></td>\n                      </tr>\n                    <% });\n                  } else { %>\n                    <tr>\n                      <td colspan=\"2\">\n                        <div class=\"alert alert-info mb-0\">\n                          <i class=\"fas fa-info-circle me-2\"></i>No sessions scheduled for today.\n                        </div>\n                      </td>\n                    </tr>\n                  <% } %>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Weekly Schedule -->\n      <div class=\"col-12\">\n        <div class=\"dashboard-section mb-4\">\n          <div class=\"section-header mb-3\">\n            <h3><i class=\"fas fa-calendar-week me-2\"></i>Weekly Schedule</h3>\n          </div>\n          \n          <div class=\"schedule-container\">\n            <% if (locals.weeklySchedule && locals.weeklySchedule.length > 0) { %>\n              <div class=\"table-responsive\">\n                <table class=\"table table-dark table-hover\">\n                  <thead class=\"bg-primary text-white\">\n                    <tr>\n                      <th>No.</th>\n                      <th>Day</th>\n                      <th>Time</th>\n                      <th>Course</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <% locals.weeklySchedule.forEach(session => { %>\n                      <tr>\n                        <td><%= session.sno %></td>\n                        <td><%= session.day %></td>\n                        <td><%= session.time %></td>\n                        <td>\n                          <span class=\"course-badge <%= session.course === 'yoga' ? 'bg-success' : \n                                                        session.course === 'zumba' ? 'bg-info' : \n                                                        'bg-warning' %>\">\n                            <%= session.course.charAt(0).toUpperCase() + session.course.slice(1) %>\n                          </span>\n                        </td>\n                      </tr>\n                    <% }); %>\n                  </tbody>\n                </table>\n              </div>\n            <% } else { %>\n              <div class=\"alert alert-info\">\n                <i class=\"fas fa-info-circle me-2\"></i>You don't have any courses assigned to your schedule yet.\n              </div>\n            <% } %>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Client Management -->\n      <div class=\"col-12\">\n        <div class=\"dashboard-section\">\n          <div class=\"section-header mb-3\">\n            <h3><i class=\"fas fa-users me-2\"></i>Your Clients</h3>\n          </div>\n          \n          <div class=\"table-responsive\">\n            <% if (locals.clients && locals.clients.length > 0) { %>\n              <table class=\"table table-dark table-hover\">\n                <thead class=\"bg-primary text-white\">\n                  <tr>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>Course</th>\n                    <th>Enrolled On</th>\n                    <th>Expires</th>\n                    <th>Days Left</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <% locals.clients.forEach(client => { %>\n                    <tr>\n                      <td>\n                        <div class=\"d-flex align-items-center\">\n                          <% if (client.profilePicture) { %>\n                            <img src=\"<%= client.profilePicture %>\" class=\"rounded-circle me-2\" width=\"32\" height=\"32\" alt=\"<%= client.name %>\">\n                          <% } else { %>\n                            <div class=\"rounded-circle bg-secondary me-2 d-flex align-items-center justify-content-center\" style=\"width: 32px; height: 32px;\">\n                              <i class=\"fas fa-user text-light\"></i>\n                            </div>\n                          <% } %>\n                          <%= client.name %>\n                        </div>\n                      </td>\n                      <td><%= client.email %></td>\n                      <td>\n                        <span class=\"course-badge <%= client.course.name === 'yoga' ? 'bg-success' : \n                                                      client.course.name === 'zumba' ? 'bg-info' : \n                                                      'bg-warning' %>\">\n                          <%= client.course.name.charAt(0).toUpperCase() + client.course.name.slice(1) %>\n                        </span>\n                      </td>\n                      <td><%= new Date(client.enrolledAt).toLocaleDateString() %></td>\n                      <td><%= new Date(client.endDate).toLocaleDateString() %></td>\n                      <td>\n                        <% if (client.remainingDays <= 7) { %>\n                          <span class=\"badge bg-danger\"><%= client.remainingDays %> days</span>\n                        <% } else { %>\n                          <span class=\"badge bg-success\"><%= client.remainingDays %> days</span>\n                        <% } %>\n                      </td>\n                    </tr>\n                  <% }); %>\n                </tbody>\n              </table>\n            <% } else { %>\n              <div class=\"alert alert-info\">\n                <i class=\"fas fa-info-circle me-2\"></i>You don't have any clients assigned yet. \n                Clients will appear here when they book courses with you.\n              </div>\n            <% } %>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</main>\n\n<!-- Session Notes Modal -->\n<div class=\"modal fade\" id=\"sessionNotesModal\" tabindex=\"-1\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content bg-dark text-light\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\"><i class=\"fas fa-sticky-note me-2\"></i>Session Notes</h5>\n        <button type=\"button\" class=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <div class=\"modal-body\">\n        <form id=\"sessionNotesForm\" action=\"/trainer/update-notes\" method=\"POST\">\n          <input type=\"hidden\" id=\"sessionId\" name=\"sessionId\">\n          \n          <div class=\"mb-3\">\n            <label for=\"sessionNotes\" class=\"form-label\">Notes</label>\n            <textarea class=\"form-control\" id=\"sessionNotes\" name=\"notes\" rows=\"5\"></textarea>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n        <button type=\"submit\" form=\"sessionNotesForm\" class=\"btn btn-danger\">Save Notes</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Script for Session Notes Modal & Dashboard Data -->\n\n\n<style>\n  .course-badge {\n    padding: 5px 10px;\n    border-radius: 4px;\n    font-size: 0.85rem;\n    font-weight: 500;\n  }\n</style>";
const inlineScripts = ["// Set session data in the modal when opened\n  document.getElementById('sessionNotesModal')?.addEventListener('show.bs.modal', function (event) {\n    const button = event.relatedTarget;\n    const sessionId = button.getAttribute('data-session-id');\n    const sessionNotes = button.getAttribute('data-session-notes');\n    \n    document.getElementById('sessionId').value = sessionId;\n    document.getElementById('sessionNotes').value = sessionNotes;\n  });\n  \n  // Update stats based on client-side calculations\n  document.addEventListener('DOMContentLoaded', function() {\n    console.log(\"DOM loaded, starting session calculations\");\n    \n    // Direct DOM references for session count elements\n    const todaySessionsElement = document.getElementById('todaySessions');\n    const totalSessionsElement = document.getElementById('totalSessions');\n    const totalClientsElement = document.getElementById('totalClients');\n    \n    if (!todaySessionsElement || !totalSessionsElement) {\n      console.error(\"Session count elements not found\");\n      return;\n    }\n    \n    // Get today's day of the week (0 = Sunday, 1 = Monday, etc.)\n    const now = new Date();\n    const today = now.getDay();\n    const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const todayString = daysOfWeek[today];\n    \n    console.log(\"Today is:\", todayString, \"(Day index:\", today, \")\");\n    \n    // ----- COUNT TODAY'S SESSIONS -----\n    \n    // Method 1: Count sessions in the Today's Schedule section\n    let todaySessionsFromTable = 0;\n    \n    // Find the Today's Schedule table \n    const todaySection = document.querySelector('.dashboard-section:first-of-type');\n    const todayTable = todaySection?.querySelector('table');\n    console.log(\"Today's schedule section found:\", !!todaySection);\n    console.log(\"Today's schedule table found:\", !!todayTable);\n    \n    if (todayTable) {\n      // Count all table rows that don't contain the \"No sessions\" message\n      const todayRows = Array.from(todayTable.querySelectorAll('tbody tr'));\n      console.log(\"Today's schedule rows found:\", todayRows.length);\n      \n      todayRows.forEach((row, i) => {\n        // Check if this is not the \"No sessions\" message row\n        const alertDiv = row.querySelector('.alert-info');\n        if (!alertDiv) {\n          todaySessionsFromTable++;\n          console.log(`Row ${i+1} is a valid session row`);\n        } else {\n          console.log(`Row ${i+1} contains alert message, not counting`);\n        }\n      });\n    }\n    \n    console.log(\"Today's sessions from table:\", todaySessionsFromTable);\n    \n    // Method 2: Count by filtering the weekly schedule\n    let weeklySessionsCount = 0;\n    let todaySessionsFromWeekly = 0;\n    \n    // Find the Weekly Schedule table\n    const weeklySection = document.querySelector('h3 i.fa-calendar-week, h3 i.fas.fa-calendar-week')?.closest('.dashboard-section');\n    const weeklyTable = weeklySection?.querySelector('table');\n    console.log(\"Weekly schedule section found:\", !!weeklySection);\n    console.log(\"Weekly schedule table found:\", !!weeklyTable);\n    \n    if (weeklyTable) {\n      const weeklyRows = Array.from(weeklyTable.querySelectorAll('tbody tr'));\n      weeklySessionsCount = weeklyRows.length;\n      console.log(\"Weekly schedule rows found:\", weeklyRows.length);\n      \n      weeklyRows.forEach((row, i) => {\n        // The day is in the second cell (index 1)\n        const cells = row.querySelectorAll('td');\n        if (cells.length >= 2) {\n          const dayText = cells[1].textContent.trim();\n          console.log(`Row ${i+1} day: \"${dayText}\"`);\n          \n          // Case-insensitive comparison with the day\n          if (dayText.toLowerCase() === todayString.toLowerCase()) {\n            todaySessionsFromWeekly++;\n            console.log(`Row ${i+1} is for today (${todayString})`);\n          }\n        }\n      });\n    }\n    \n    console.log(\"Today's sessions from weekly schedule:\", todaySessionsFromWeekly);\n    console.log(\"Total weekly sessions:\", weeklySessionsCount);\n    \n    // Use the maximum count found by either method\n    const todaySessionsFinal = Math.max(todaySessionsFromTable, todaySessionsFromWeekly);\n    console.log(\"Final today's sessions count:\", todaySessionsFinal);\n    \n    // ----- COUNT CLIENTS -----\n    let totalClients = 0;\n    \n    // Find the Your Clients table\n    const clientsSection = document.querySelector('h3 i.fa-users, h3 i.fas.fa-users')?.closest('.dashboard-section');\n    const clientsTable = clientsSection?.querySelector('table');\n    console.log(\"Clients section found:\", !!clientsSection);\n    console.log(\"Clients table found:\", !!clientsTable);\n    \n    if (clientsTable) {\n      const clientRows = Array.from(clientsTable.querySelectorAll('tbody tr'));\n      totalClients = clientRows.length;\n      console.log(\"Client rows found:\", clientRows.length);\n    }\n    \n    // ----- UPDATE THE DISPLAYED COUNTS -----\n    \n    // Update today's sessions count if we found sessions\n    if (todaySessionsFinal > 0 || parseInt(todaySessionsElement.textContent) !== todaySessionsFinal) {\n      console.log(\"Updating today's sessions count to:\", todaySessionsFinal);\n      todaySessionsElement.textContent = todaySessionsFinal;\n      todaySessionsElement.style.color = \"#ff3b30\";\n      todaySessionsElement.style.fontWeight = \"bold\";\n    }\n    \n    // Update total sessions count if we found sessions\n    if (weeklySessionsCount > 0 || parseInt(totalSessionsElement.textContent) !== weeklySessionsCount) {\n      console.log(\"Updating total sessions count to:\", weeklySessionsCount);\n      totalSessionsElement.textContent = weeklySessionsCount;\n      totalSessionsElement.style.color = \"#ff3b30\";\n      totalSessionsElement.style.fontWeight = \"bold\";\n    }\n    \n    // Update total clients count if we found clients\n    if (totalClientsElement && (totalClients > 0 || parseInt(totalClientsElement.textContent) !== totalClients)) {\n      console.log(\"Updating total clients count to:\", totalClients);\n      totalClientsElement.textContent = totalClients;\n      totalClientsElement.style.color = \"#ff3b30\";\n      totalClientsElement.style.fontWeight = \"bold\";\n    }\n    \n    console.log(\"Session calculations complete\");\n  });"];
const externalScripts = [];

function TrainerDashboard(props) {
  const defaults = (fallbackData && fallbackData["trainerDashboard"]) || {};
  const data = { ...defaults, ...props };

  const defaultLocals = defaults.locals || {};
  const overrideLocals = props && props.locals ? props.locals : {};
  const locals = {
    ...defaultLocals,
    ...overrideLocals,
    isLoggedIn: data.isLoggedIn ?? defaultLocals.isLoggedIn ?? false,
    userRole: data.userRole ?? defaultLocals.userRole ?? "guest",
    userName: data.userName ?? defaultLocals.userName ?? "Guest",
  };

  data.locals = locals;

  let html = ejs.render(template, data);

  const collectedInlineScripts = [...inlineScripts];
  html = html.replace(/<script[^>]*>([\s\S]*?)<\/script>/gi, (_, body) => {
    const trimmed = body.trim();
    if (trimmed.length) {
      collectedInlineScripts.push(trimmed);
    }
    return "";
  });

  return (
    <MainLayout {...data} scripts={externalScripts}>
      <div dangerouslySetInnerHTML={{ __html: html }} />
      {collectedInlineScripts.map((script, index) => (
        <script key={index} dangerouslySetInnerHTML={{ __html: script }} />
      ))}
    </MainLayout>
  );
}

module.exports = TrainerDashboard;




