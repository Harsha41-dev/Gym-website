const React = require("react");
const ejs = require("ejs");
const MainLayout = require("../layouts/MainLayout");
const fallbackData = require("../utils/fallbackData");

const template = "<main>\n    <div class=\"container my-5\">\n      <% if (locals.flashMessage && locals.flashType === 'success') { %>\n        <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n          <i class=\"fas fa-check-circle me-2\"></i><%= flashMessage %>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n        </div>\n      <% } %>\n      <div class=\"dashboard-welcome\">\n        <h2 class=\"mb-4\">\n          <i class=\"fas fa-chart-line me-2\"></i>Hello, <%= user.name %>!\n        </h2>\n        <p class=\"lead mb-4\">Welcome to your fitness dashboard. Track your progress and manage your fitness journey.</p>\n      </div>\n      <div class=\"row\">\n        <!-- Enrolled Courses Section -->\n        <div class=\"col-md-8\">\n          <div class=\"card mb-4\">\n            <div class=\"card-header bg-danger text-white\">\n              <h3>My Courses</h3>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"dashboard-section\">\n                <div class=\"section-header mb-3 d-flex justify-content-between align-items-center\">\n                  <h4><i class=\"fas fa-calendar-alt me-2\"></i>My Course Enrollments</h4>\n                  <a href=\"/courses\" class=\"btn btn-sm btn-outline-danger\">\n                    <i class=\"fas fa-plus me-1\"></i> Browse Courses\n                  </a>\n                </div>\n                \n                <div class=\"row\">\n                  <% if (enrolledCourses && enrolledCourses.length > 0) { %>\n                    <% enrolledCourses.forEach(enrollment => { %>\n                      <div class=\"col-md-6 mb-4\">\n                        <div class=\"card course-enrollment-card h-100\">\n                          <div class=\"card-header d-flex justify-content-between align-items-center\">\n                            <h5 class=\"mb-0\"><%= enrollment.courseName %></h5>\n                            <% if (enrollment.isActive) { %>\n                              <span class=\"badge bg-success\">Active</span>\n                            <% } else if (new Date() > enrollment.endDate) { %>\n                              <span class=\"badge bg-secondary\">Expired</span>\n                            <% } else { %>\n                              <span class=\"badge bg-warning\">Pending</span>\n                            <% } %>\n                          </div>\n                          <div class=\"card-body\">\n                            <div class=\"mb-3\">\n                              <strong><i class=\"fas fa-user-tie me-2\"></i>Trainer:</strong>\n                              <p class=\"mb-0\"><%= enrollment.trainerName %></p>\n                            </div>\n                            \n                            <% if (enrollment.isActive) { %>\n                              <div class=\"mb-3\">\n                                <strong><i class=\"fas fa-clock me-2\"></i>Expires In:</strong>\n                                <p class=\"mb-0 <%= enrollment.daysLeft < 7 ? 'text-danger' : '' %>\">\n                                  <%= enrollment.daysLeft %> days\n                                </p>\n                              </div>\n                            <% } %>\n                            \n                            <% if (enrollment.courseSchedule && enrollment.courseSchedule.length > 0) { %>\n                              <div class=\"mb-3\">\n                                <strong><i class=\"fas fa-calendar-week me-2\"></i>Weekly Schedule:</strong>\n                                <ul class=\"list-unstyled schedule-list\">\n                                  <% \n                                  const dayOrder = {\n                                    monday: 1, tuesday: 2, wednesday: 3, thursday: 4, friday: 5, saturday: 6, sunday: 7\n                                  };\n                                  \n                                  const sortedSchedule = [...enrollment.courseSchedule].sort((a, b) => {\n                                    return dayOrder[a.day] - dayOrder[b.day];\n                                  });\n                                  \n                                  sortedSchedule.slice(0, 3).forEach(session => { %>\n                                    <li>\n                                      <i class=\"fas fa-clock-rotate-left me-1 text-muted\"></i>\n                                      <%= session.day.charAt(0).toUpperCase() + session.day.slice(1) %>: \n                                      <%= session.startTime %> - <%= session.endTime %>\n                                    </li>\n                                  <% }); %>\n                                  \n                                  <% if (sortedSchedule.length > 3) { %>\n                                    <li><small class=\"text-muted\">+ <%= sortedSchedule.length - 3 %> more sessions</small></li>\n                                  <% } %>\n                                </ul>\n                              </div>\n                            <% } %>\n                            \n                            <div class=\"d-grid gap-2 mt-3\">\n                              <% if (enrollment.isActive && enrollment.daysLeft < 14) { %>\n                                <button class=\"btn btn-sm btn-outline-success renew-btn\" \n                                        data-enrollment-id=\"<%= enrollment._id %>\">\n                                  <i class=\"fas fa-sync-alt me-1\"></i>Renew Enrollment\n                                </button>\n                              <% } %>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    <% }); %>\n                  <% } else { %>\n                    <div class=\"col-12\">\n                      <div class=\"alert alert-info\">\n                        <i class=\"fas fa-info-circle me-2\"></i>You haven't enrolled in any courses yet. \n                        <a href=\"/courses\" class=\"alert-link\">Browse our courses</a> to get started!\n                      </div>\n                    </div>\n                  <% } %>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"col-md-4\">\n          <div class=\"card\">\n            <div class=\"card-header bg-danger text-white\">\n              <h3>Quick Actions</h3>\n            </div>\n            <div class=\"card-body\">\n              <div class=\"list-group\">\n                <a href=\"/courses\" class=\"list-group-item list-group-item-action\">\n                  <i class=\"fas fa-calendar-plus me-2\"></i>Explore Courses\n                </a>\n                <a href=\"/schedule\" class=\"list-group-item list-group-item-action\">\n                  <i class=\"fas fa-calendar-alt me-2\"></i>My Weekly Schedule\n                </a>\n                <a href=\"/profile\" class=\"list-group-item list-group-item-action\">\n                  <i class=\"fas fa-user-edit me-2\"></i>Edit Profile\n                </a>\n              </div>\n            </div>\n          </div>\n          \n          <!-- Today's Schedule Card -->\n          <div class=\"card mt-4\">\n            <div class=\"card-header bg-primary text-white\">\n              <h3><i class=\"fas fa-calendar-day me-2\"></i>Today's Schedule</h3>\n            </div>\n            <div class=\"card-body\">\n              <% \n              // Get today's day of the week\n              const daysOfWeek = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n              const today = daysOfWeek[new Date().getDay()];\n              \n              // Filter courses for today\n              let todayClasses = [];\n              \n              if (enrolledCourses && enrolledCourses.length > 0) {\n                enrolledCourses.forEach(enrollment => {\n                  if (enrollment.courseSchedule && enrollment.isActive) {\n                    const todaySchedule = enrollment.courseSchedule.filter(session => \n                      session.day.toLowerCase() === today\n                    );\n                    \n                    todaySchedule.forEach(session => {\n                      todayClasses.push({\n                        time: `${session.startTime} - ${session.endTime}`,\n                        course: enrollment.courseName,\n                        trainer: enrollment.trainerName\n                      });\n                    });\n                  }\n                });\n                \n                // Sort by start time\n                todayClasses.sort((a, b) => {\n                  const timeA = a.time.split(' - ')[0];\n                  const timeB = b.time.split(' - ')[0];\n                  return timeA.localeCompare(timeB);\n                });\n              }\n              %>\n              \n              <% if (todayClasses && todayClasses.length > 0) { %>\n                <div class=\"table-responsive\">\n                  <table class=\"table table-hover\">\n                    <thead class=\"table-light\">\n                      <tr>\n                        <th>Time</th>\n                        <th>Course</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <% todayClasses.forEach(session => { %>\n                        <tr>\n                          <td><strong><%= session.time %></strong></td>\n                          <td><%= session.course %></td>\n                        </tr>\n                      <% }); %>\n                    </tbody>\n                  </table>\n                </div>\n              <% } else { %>\n                <div class=\"alert alert-info\">\n                  <i class=\"fas fa-info-circle me-2\"></i>No classes scheduled for today.\n                </div>\n              <% } %>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n  \n  <!-- Add Renew Enrollment Modal/Script -->";
const inlineScripts = ["document.querySelectorAll('.renew-btn').forEach(button => {\n      button.addEventListener('click', function() {\n        const enrollmentId = this.getAttribute('data-enrollment-id');\n        if (confirm('Would you like to renew this course enrollment for another 4 weeks?')) {\n          fetch(`/courses/api/enrollment/${enrollmentId}/renew`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-Requested-With': 'XMLHttpRequest'\n            },\n            credentials: 'same-origin'\n          })\n          .then(response => response.json())\n          .then(data => {\n            if (data.success) {\n              alert('Enrollment renewed successfully for 4 more weeks!');\n              window.location.reload();\n            } else {\n              alert(data.message || 'Failed to renew enrollment. Please try again.');\n            }\n          })\n          .catch(error => {\n            console.error('Error:', error);\n            alert('An error occurred while renewing enrollment. Please try again later.');\n          });\n        }\n      });\n    });"];
const externalScripts = [];

function UserDashboard(props) {
  const defaults = (fallbackData && fallbackData["userDashboard"]) || {};
  const data = { ...defaults, ...props };

  const defaultLocals = defaults.locals || {};
  const overrideLocals = props && props.locals ? props.locals : {};
  const locals = {
    ...defaultLocals,
    ...overrideLocals,
    isLoggedIn: data.isLoggedIn ?? defaultLocals.isLoggedIn ?? false,
    userRole: data.userRole ?? defaultLocals.userRole ?? "guest",
    userName: data.userName ?? defaultLocals.userName ?? "Guest",
  };

  data.locals = locals;

  let html = ejs.render(template, data);

  const collectedInlineScripts = [...inlineScripts];
  html = html.replace(/<script[^>]*>([\s\S]*?)<\/script>/gi, (_, body) => {
    const trimmed = body.trim();
    if (trimmed.length) {
      collectedInlineScripts.push(trimmed);
    }
    return "";
  });

  return (
    <MainLayout {...data} scripts={externalScripts}>
      <div dangerouslySetInnerHTML={{ __html: html }} />
      {collectedInlineScripts.map((script, index) => (
        <script key={index} dangerouslySetInnerHTML={{ __html: script }} />
      ))}
    </MainLayout>
  );
}

module.exports = UserDashboard;




